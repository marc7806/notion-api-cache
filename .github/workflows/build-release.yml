name: Build-Release

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        go-version: [ '1.21.x', '1.22.x' ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Build
        run: go build -v ./...

      - name: Test
        run: go test -v ./...

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          output-file: "false"
          skip-git-pull: "true"
          tag-prefix: ''

      - name: Show the next version
        run: |
          echo ${{ steps.changelog.outputs.tag }}
          echo ${{ steps.changelog.outputs.skipped == 'false' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        with:
          push: true
          platforms: linux/amd64,linux/arm/v6,linux/arm64
          tags: marc7806/notion-api-cache:latest, marc7806/notion-api-cache:${{ steps.changelog.outputs.tag }}

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
          draft: false
          prerelease: false
